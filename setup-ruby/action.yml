name: Setup Ruby
description: |
  Sets up Ruby. Wrapper around https://github.com/ruby/setup-ruby
  
  Supported platforms:
  
  * macos-13 with a simple brew install and NO cache support
  * All the other platforms supported by https://github.com/ruby/setup-ruby
inputs:
  ruby-version:
    description: 'Engine and version to use, see the syntax in the README. Reads from .ruby-version or .tool-versions if unset.'
    default: 'default'
  rubygems:
    description: |
      The version of RubyGems to use. Either 'default' (the default), 'latest', or a version number (e.g., 3.3.5).
      For 'default', no action is taken and the version of RubyGems that comes with Ruby by default is used.
      For 'latest', `gem update --system` is run to update to the latest RubyGems version.
      Similarly, if a version number is given, `gem update --system <version>` is run to update to that version of RubyGems, as long as that version is newer than the one provided by default.
  bundler:
    description: |
      The version of Bundler to install. Either 'Gemfile.lock' (the default), 'default', 'latest', 'none', or a version number (e.g., 1, 2, 2.1, 2.1.4).
      For 'Gemfile.lock', the version of the BUNDLED WITH section from the Gemfile.lock if it exists. If the file or section does not exist then the same as 'default'.
      For 'default', if the Ruby ships with Bundler 2.2+ as a default gem, that version is used, otherwise the same as 'latest'.
      For 'latest', the latest compatible Bundler version is installed (Bundler 2 on Ruby >= 2.3, Bundler 1 on Ruby < 2.3).
      For 'none', nothing is done.
  bundler-cache:
    description: 'Run "bundle install", and cache the result automatically. Either true or false.'
    default: 'false'
  working-directory:
    description: 'The working directory to use for resolving paths for .ruby-version, .tool-versions and Gemfile.lock.'
  cache-version:
    description: |
      Arbitrary string that will be added to the cache key of the bundler cache. Set or change it if you need
      to invalidate the cache.
runs:
  using: "composite"
  steps:
    - run: |
        echo "macos_version=$(sw_vers -productVersion | cut -f1 -d.)" >> "$GITHUB_OUTPUT"
        echo "macos_arch=$(uname -p)" >> "$GITHUB_OUTPUT"
      shell: bash
      if: "${{ runner.os == 'macOS' }}"
      id: get_macos_version

    - run: |
        set -e
        brew install ruby@${{ inputs.ruby-version }}
        BIN_PATH="$(brew --prefix ruby@${{ inputs.ruby-version }})"
        
        export PATH="$BIN_PATH:$PATH"
        echo "$BIN_PATH/bin" >> $GITHUB_PATH
        
        bundle install
      # the setup-ruby action does not support macos-13 yet
      shell: bash
      working-directory: "${{ inputs.working-directory }}"
      if: "${{ runner.os == 'macOS' && (steps.get_macos_version.outputs.macos_arch == 'arm' || steps.get_macos_version.outputs.macos_version == '13') }}"

    - uses: ruby/setup-ruby@v1
      if: "${{ runner.os != 'macOS' || steps.get_macos_version.outputs.macos_arch == 'arm' || steps.get_macos_version.outputs.macos_version != '13' }}"
      with:
        ruby-version: "${{ inputs.ruby-version }}"
        bundler: "${{ inputs.bundler }}"
        bundler-cache: "${{ inputs.bundler-cache }}"
        rubygems: "${{ inputs.rubygems }}"
        working-directory: "${{ inputs.working-directory }}"
        cache-version: "${{ inputs.cache-version }}"
